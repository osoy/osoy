image: "rust:latest"

stages:
  - test
  - deploy
  - publish

cache:
  paths:
    - target

test:
  stage: test
  script:
    - rustc --version && cargo --version
    - cargo test --workspace --verbose

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    SOURCEFORGE_KEY: $SOURCEFORGE_KEY
  script:
    - make
    - tar -czf osoy-$CI_COMMIT_TAG.tar.gz osoy
    - tar -cjf osoy-$CI_COMMIT_TAG.tar.bz2 osoy
    - sha1sum osoy-$CI_COMMIT_TAG.tar* > osoy-$CI_COMMIT_TAG.sha1.txt
    - md5sum osoy-$CI_COMMIT_TAG.tar* > osoy-$CI_COMMIT_TAG.md5.txt
    - mkdir -p ~/.ssh
    - printf "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - chmod 600 $SOURCEFORGE_KEY
    - mv -f CHANGELOG.md README.md
    - scp -i $SOURCEFORGE_KEY README.md osoy-$CI_COMMIT_TAG* rasmusmerzin@frs.sourceforge.net:/home/frs/project/osoy
    - mv osoy-$CI_COMMIT_TAG*.txt target

publish_gitlab:
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - SHA1=$(cat target/osoy-$CI_COMMIT_TAG.sha1.txt)
    - MD5=$(cat target/osoy-$CI_COMMIT_TAG.md5.txt)
    - DESC=$(printf 'SHA1\n```\n%s\n```\nMD5\n```\n%s\n```\n' "$SHA1" "$MD5")
    - printf '%s' "$DESC"
    - release-cli create
      --name "Osoy $CI_COMMIT_TAG"
      --tag-name $CI_COMMIT_TAG
      --description "$DESC"
      --assets-link "{\"name\":\"osoy-$CI_COMMIT_TAG.tar.gz\",\"url\":\"https://downloads.sourceforge.net/project/osoy/osoy-$CI_COMMIT_TAG.tar.gz\"}"
      --assets-link "{\"name\":\"osoy-$CI_COMMIT_TAG.tar.bz2\",\"url\":\"https://downloads.sourceforge.net/project/osoy/osoy-$CI_COMMIT_TAG.tar.bz2\"}"
      --assets-link "{\"name\":\"osoy-$CI_COMMIT_TAG.sha1.txt\",\"url\":\"https://downloads.sourceforge.net/project/osoy/osoy-$CI_COMMIT_TAG.sha1.txt\"}"
      --assets-link "{\"name\":\"osoy-$CI_COMMIT_TAG.md5.txt\",\"url\":\"https://downloads.sourceforge.net/project/osoy/osoy-$CI_COMMIT_TAG.md5.txt\"}"

publish_crates:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    TOKEN: $CRATES_TOKEN
  script:
    - cargo publish --token $TOKEN

image: "rust:latest"

stages:
  - test
  - build
  - deploy
  - publish

cache:
  paths:
    - target

test:
  stage: test
  script:
    - rustc --version && cargo --version
    - cargo test --workspace --verbose

build:
  stage: build
  script:
    - cargo build --release
    - strip target/release/osoy

sourceforge:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    SOURCEFORGE_KEY: $SOURCEFORGE_KEY
  script:
    - cp -f target/release/osoy osoy
    - tar -czf osoy-$CI_COMMIT_TAG.tar.gz osoy
    - tar -czf osoy-$CI_COMMIT_TAG-src.tar.gz src Cargo.{toml,lock} Makefile
    - sha1sum osoy-$CI_COMMIT_TAG{,-src}.tar.gz > osoy-$CI_COMMIT_TAG.sha1.txt
    - md5sum osoy-$CI_COMMIT_TAG{,-src}.tar.gz > osoy-$CI_COMMIT_TAG.md5.txt
    - cp -f osoy-$CI_COMMIT_TAG.{sha1,md5}.txt target
    - cp -f CHANGELOG.md README.md
    - mkdir -p ~/.ssh
    - cp -f $SOURCEFORGE_KEY ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - printf 'Host *\n\tStrictHostKeyChecking no\n\n' > ~/.ssh/config
    - scp README.md osoy-$CI_COMMIT_TAG* rasmusmerzin@frs.sourceforge.net:/home/frs/project/osoy

crates:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    TOKEN: $CRATES_TOKEN
  script:
    - cargo publish --token $TOKEN

gitlab:
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - SHA1=$(cat target/osoy-$CI_COMMIT_TAG.sha1.txt)
    - MD5=$(cat target/osoy-$CI_COMMIT_TAG.md5.txt)
    - DESC=$(printf 'SHA1\n```\n%s\n```\nMD5\n```\n%s\n```\n' "$SHA1" "$MD5")
    - printf '%s' "$DESC"
    - release-cli create
      --name "Osoy $CI_COMMIT_TAG"
      --tag-name $CI_COMMIT_TAG
      --description "$DESC"
      --assets-link "{\"name\":\"osoy-$CI_COMMIT_TAG.tar.gz\",\"url\":\"https://downloads.sourceforge.net/project/osoy/osoy-$CI_COMMIT_TAG.tar.gz\"}"
      --assets-link "{\"name\":\"osoy-$CI_COMMIT_TAG-src.tar.gz\",\"url\":\"https://downloads.sourceforge.net/project/osoy/osoy-$CI_COMMIT_TAG-src.tar.gz\"}"
      --assets-link "{\"name\":\"osoy-$CI_COMMIT_TAG.sha1.txt\",\"url\":\"https://downloads.sourceforge.net/project/osoy/osoy-$CI_COMMIT_TAG.sha1.txt\"}"
      --assets-link "{\"name\":\"osoy-$CI_COMMIT_TAG.md5.txt\",\"url\":\"https://downloads.sourceforge.net/project/osoy/osoy-$CI_COMMIT_TAG.md5.txt\"}"

aur:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    AUR_KEY: $AUR_KEY
  script:
    - VERSION=$(sed -n 's/^version\s*=\s*"\(.*\)".*/\1/p' Cargo.toml | head -n1)
    - echo $VERSION
    - mkdir -p ~/.ssh
    - cp -f $AUR_KEY ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - printf 'Host *\n\tStrictHostKeyChecking no\n\n' > ~/.ssh/config
    - git config --global user.name 'Emil Rasmus Merzin'
    - git config --global user.email rasmusmerzin@gmail.com
    - git clone ssh://aur@aur.archlinux.org/osoy     osoy-src
    - git clone ssh://aur@aur.archlinux.org/osoy-bin osoy-bin
    - find aur/src -mindepth 1 -maxdepth 1 | while read -r f; do cp -vrf "$f" osoy-src; done
    - find aur/bin -mindepth 1 -maxdepth 1 | while read -r f; do cp -vrf "$f" osoy-bin; done
    - cd osoy-src
    - SHA1=$(sed -n 's/^\(.*\)  osoy-'"$CI_COMMIT_TAG"'-src.tar.gz$/\1/p' ../target/osoy-$CI_COMMIT_TAG.sha1.txt)
    - MD5=$(sed -n 's/^\(.*\)  osoy-'"$CI_COMMIT_TAG"'-src.tar.gz$/\1/p' ../target/osoy-$CI_COMMIT_TAG.md5.txt)
    - sed -i "s/%VERSION%/$VERSION/" PKGBUILD .SRCINFO
    - sed -i "s/%SHA1%/$SHA1/" PKGBUILD .SRCINFO
    - sed -i "s/%MD5%/$MD5/" PKGBUILD .SRCINFO
    - cat PKGBUILD
    - cat .SRCINFO
    - git diff
    - git add .
    - git commit -m $CI_COMMIT_TAG
    - git push
    - cd ../osoy-bin
    - SHA1=$(sed -n 's/^\(.*\)  osoy-'"$CI_COMMIT_TAG"'.tar.gz$/\1/p' ../target/osoy-$CI_COMMIT_TAG.sha1.txt)
    - MD5=$(sed -n 's/^\(.*\)  osoy-'"$CI_COMMIT_TAG"'.tar.gz$/\1/p' ../target/osoy-$CI_COMMIT_TAG.md5.txt)
    - sed -i "s/%VERSION%/$VERSION/" PKGBUILD .SRCINFO
    - sed -i "s/%SHA1%/$SHA1/" PKGBUILD .SRCINFO
    - sed -i "s/%MD5%/$MD5/" PKGBUILD .SRCINFO
    - cat PKGBUILD
    - cat .SRCINFO
    - git diff
    - git add .
    - git commit -m $CI_COMMIT_TAG
    - git push
